//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 * Copyright (c) 2022 by the IronCore authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by defaulter-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ironcore-dev/ironcore-net/api/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&v1alpha1.IP{}, func(obj interface{}) { SetObjectDefaults_IP(obj.(*v1alpha1.IP)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.IPList{}, func(obj interface{}) { SetObjectDefaults_IPList(obj.(*v1alpha1.IPList)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.LoadBalancer{}, func(obj interface{}) { SetObjectDefaults_LoadBalancer(obj.(*v1alpha1.LoadBalancer)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.LoadBalancerList{}, func(obj interface{}) { SetObjectDefaults_LoadBalancerList(obj.(*v1alpha1.LoadBalancerList)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.NetworkInterface{}, func(obj interface{}) { SetObjectDefaults_NetworkInterface(obj.(*v1alpha1.NetworkInterface)) })
	scheme.AddTypeDefaultingFunc(&v1alpha1.NetworkInterfaceList{}, func(obj interface{}) { SetObjectDefaults_NetworkInterfaceList(obj.(*v1alpha1.NetworkInterfaceList)) })
	return nil
}

func SetObjectDefaults_IP(in *v1alpha1.IP) {
	SetDefaults_IPSpec(&in.Spec)
}

func SetObjectDefaults_IPList(in *v1alpha1.IPList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_IP(a)
	}
}

func SetObjectDefaults_LoadBalancer(in *v1alpha1.LoadBalancer) {
	for i := range in.Spec.IPs {
		a := &in.Spec.IPs[i]
		SetDefaults_LoadBalancerIP(a)
	}
}

func SetObjectDefaults_LoadBalancerList(in *v1alpha1.LoadBalancerList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_LoadBalancer(a)
	}
}

func SetObjectDefaults_NetworkInterface(in *v1alpha1.NetworkInterface) {
	for i := range in.Spec.PublicIPs {
		a := &in.Spec.PublicIPs[i]
		SetDefaults_NetworkInterfacePublicIP(a)
	}
}

func SetObjectDefaults_NetworkInterfaceList(in *v1alpha1.NetworkInterfaceList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_NetworkInterface(a)
	}
}
