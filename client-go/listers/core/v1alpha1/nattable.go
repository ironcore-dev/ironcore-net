// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ironcore-dev/ironcore-net/api/core/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NATTableLister helps list NATTables.
// All objects returned here must be treated as read-only.
type NATTableLister interface {
	// List lists all NATTables in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NATTable, err error)
	// NATTables returns an object that can list and get NATTables.
	NATTables(namespace string) NATTableNamespaceLister
	NATTableListerExpansion
}

// nATTableLister implements the NATTableLister interface.
type nATTableLister struct {
	indexer cache.Indexer
}

// NewNATTableLister returns a new NATTableLister.
func NewNATTableLister(indexer cache.Indexer) NATTableLister {
	return &nATTableLister{indexer: indexer}
}

// List lists all NATTables in the indexer.
func (s *nATTableLister) List(selector labels.Selector) (ret []*v1alpha1.NATTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NATTable))
	})
	return ret, err
}

// NATTables returns an object that can list and get NATTables.
func (s *nATTableLister) NATTables(namespace string) NATTableNamespaceLister {
	return nATTableNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NATTableNamespaceLister helps list and get NATTables.
// All objects returned here must be treated as read-only.
type NATTableNamespaceLister interface {
	// List lists all NATTables in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NATTable, err error)
	// Get retrieves the NATTable from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NATTable, error)
	NATTableNamespaceListerExpansion
}

// nATTableNamespaceLister implements the NATTableNamespaceLister
// interface.
type nATTableNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NATTables in the indexer for a given namespace.
func (s nATTableNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NATTable, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NATTable))
	})
	return ret, err
}

// Get retrieves the NATTable from the indexer for a given namespace and name.
func (s nATTableNamespaceLister) Get(name string) (*v1alpha1.NATTable, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("nattable"), name)
	}
	return obj.(*v1alpha1.NATTable), nil
}
