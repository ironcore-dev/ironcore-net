// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/ironcore-dev/ironcore-net/client-go/ironcorenet/typed/core/v1alpha1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeCoreV1alpha1 struct {
	*testing.Fake
}

func (c *FakeCoreV1alpha1) DaemonSets(namespace string) v1alpha1.DaemonSetInterface {
	return &FakeDaemonSets{c, namespace}
}

func (c *FakeCoreV1alpha1) IPs(namespace string) v1alpha1.IPInterface {
	return &FakeIPs{c, namespace}
}

func (c *FakeCoreV1alpha1) IPAddresses() v1alpha1.IPAddressInterface {
	return &FakeIPAddresses{c}
}

func (c *FakeCoreV1alpha1) Instances(namespace string) v1alpha1.InstanceInterface {
	return &FakeInstances{c, namespace}
}

func (c *FakeCoreV1alpha1) LoadBalancers(namespace string) v1alpha1.LoadBalancerInterface {
	return &FakeLoadBalancers{c, namespace}
}

func (c *FakeCoreV1alpha1) LoadBalancerRoutings(namespace string) v1alpha1.LoadBalancerRoutingInterface {
	return &FakeLoadBalancerRoutings{c, namespace}
}

func (c *FakeCoreV1alpha1) NATGateways(namespace string) v1alpha1.NATGatewayInterface {
	return &FakeNATGateways{c, namespace}
}

func (c *FakeCoreV1alpha1) NATGatewayAutoscalers(namespace string) v1alpha1.NATGatewayAutoscalerInterface {
	return &FakeNATGatewayAutoscalers{c, namespace}
}

func (c *FakeCoreV1alpha1) NATTables(namespace string) v1alpha1.NATTableInterface {
	return &FakeNATTables{c, namespace}
}

func (c *FakeCoreV1alpha1) Networks(namespace string) v1alpha1.NetworkInterface {
	return &FakeNetworks{c, namespace}
}

func (c *FakeCoreV1alpha1) NetworkIDs() v1alpha1.NetworkIDInterface {
	return &FakeNetworkIDs{c}
}

func (c *FakeCoreV1alpha1) NetworkInterfaces(namespace string) v1alpha1.NetworkInterfaceInterface {
	return &FakeNetworkInterfaces{c, namespace}
}

func (c *FakeCoreV1alpha1) NetworkPolicies(namespace string) v1alpha1.NetworkPolicyInterface {
	return &FakeNetworkPolicies{c, namespace}
}

func (c *FakeCoreV1alpha1) NetworkPolicyRules(namespace string) v1alpha1.NetworkPolicyRuleInterface {
	return &FakeNetworkPolicyRules{c, namespace}
}

func (c *FakeCoreV1alpha1) Nodes() v1alpha1.NodeInterface {
	return &FakeNodes{c}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeCoreV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
