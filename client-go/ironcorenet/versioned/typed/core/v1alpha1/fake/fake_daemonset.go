// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/ironcore-dev/ironcore-net/api/core/v1alpha1"
	corev1alpha1 "github.com/ironcore-dev/ironcore-net/client-go/applyconfigurations/core/v1alpha1"
	typedcorev1alpha1 "github.com/ironcore-dev/ironcore-net/client-go/ironcorenet/versioned/typed/core/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeDaemonSets implements DaemonSetInterface
type fakeDaemonSets struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.DaemonSet, *v1alpha1.DaemonSetList, *corev1alpha1.DaemonSetApplyConfiguration]
	Fake *FakeCoreV1alpha1
}

func newFakeDaemonSets(fake *FakeCoreV1alpha1, namespace string) typedcorev1alpha1.DaemonSetInterface {
	return &fakeDaemonSets{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.DaemonSet, *v1alpha1.DaemonSetList, *corev1alpha1.DaemonSetApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("daemonsets"),
			v1alpha1.SchemeGroupVersion.WithKind("DaemonSet"),
			func() *v1alpha1.DaemonSet { return &v1alpha1.DaemonSet{} },
			func() *v1alpha1.DaemonSetList { return &v1alpha1.DaemonSetList{} },
			func(dst, src *v1alpha1.DaemonSetList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.DaemonSetList) []*v1alpha1.DaemonSet { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.DaemonSetList, items []*v1alpha1.DaemonSet) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
