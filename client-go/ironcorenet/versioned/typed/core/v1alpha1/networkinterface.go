// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	corev1alpha1 "github.com/ironcore-dev/ironcore-net/api/core/v1alpha1"
	applyconfigurationscorev1alpha1 "github.com/ironcore-dev/ironcore-net/client-go/applyconfigurations/core/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore-net/client-go/ironcorenet/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// NetworkInterfacesGetter has a method to return a NetworkInterfaceInterface.
// A group's client should implement this interface.
type NetworkInterfacesGetter interface {
	NetworkInterfaces(namespace string) NetworkInterfaceInterface
}

// NetworkInterfaceInterface has methods to work with NetworkInterface resources.
type NetworkInterfaceInterface interface {
	Create(ctx context.Context, networkInterface *corev1alpha1.NetworkInterface, opts v1.CreateOptions) (*corev1alpha1.NetworkInterface, error)
	Update(ctx context.Context, networkInterface *corev1alpha1.NetworkInterface, opts v1.UpdateOptions) (*corev1alpha1.NetworkInterface, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, networkInterface *corev1alpha1.NetworkInterface, opts v1.UpdateOptions) (*corev1alpha1.NetworkInterface, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*corev1alpha1.NetworkInterface, error)
	List(ctx context.Context, opts v1.ListOptions) (*corev1alpha1.NetworkInterfaceList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *corev1alpha1.NetworkInterface, err error)
	Apply(ctx context.Context, networkInterface *applyconfigurationscorev1alpha1.NetworkInterfaceApplyConfiguration, opts v1.ApplyOptions) (result *corev1alpha1.NetworkInterface, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, networkInterface *applyconfigurationscorev1alpha1.NetworkInterfaceApplyConfiguration, opts v1.ApplyOptions) (result *corev1alpha1.NetworkInterface, err error)
	NetworkInterfaceExpansion
}

// networkInterfaces implements NetworkInterfaceInterface
type networkInterfaces struct {
	*gentype.ClientWithListAndApply[*corev1alpha1.NetworkInterface, *corev1alpha1.NetworkInterfaceList, *applyconfigurationscorev1alpha1.NetworkInterfaceApplyConfiguration]
}

// newNetworkInterfaces returns a NetworkInterfaces
func newNetworkInterfaces(c *CoreV1alpha1Client, namespace string) *networkInterfaces {
	return &networkInterfaces{
		gentype.NewClientWithListAndApply[*corev1alpha1.NetworkInterface, *corev1alpha1.NetworkInterfaceList, *applyconfigurationscorev1alpha1.NetworkInterfaceApplyConfiguration](
			"networkinterfaces",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *corev1alpha1.NetworkInterface { return &corev1alpha1.NetworkInterface{} },
			func() *corev1alpha1.NetworkInterfaceList { return &corev1alpha1.NetworkInterfaceList{} },
		),
	}
}
