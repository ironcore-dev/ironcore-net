// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/ironcore-dev/ironcore-net/api/core/v1alpha1"
	corev1alpha1 "github.com/ironcore-dev/ironcore-net/client-go/applyconfigurations/core/v1alpha1"
	scheme "github.com/ironcore-dev/ironcore-net/client-go/ironcorenet/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// NATGatewayAutoscalersGetter has a method to return a NATGatewayAutoscalerInterface.
// A group's client should implement this interface.
type NATGatewayAutoscalersGetter interface {
	NATGatewayAutoscalers(namespace string) NATGatewayAutoscalerInterface
}

// NATGatewayAutoscalerInterface has methods to work with NATGatewayAutoscaler resources.
type NATGatewayAutoscalerInterface interface {
	Create(ctx context.Context, nATGatewayAutoscaler *v1alpha1.NATGatewayAutoscaler, opts v1.CreateOptions) (*v1alpha1.NATGatewayAutoscaler, error)
	Update(ctx context.Context, nATGatewayAutoscaler *v1alpha1.NATGatewayAutoscaler, opts v1.UpdateOptions) (*v1alpha1.NATGatewayAutoscaler, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, nATGatewayAutoscaler *v1alpha1.NATGatewayAutoscaler, opts v1.UpdateOptions) (*v1alpha1.NATGatewayAutoscaler, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.NATGatewayAutoscaler, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.NATGatewayAutoscalerList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.NATGatewayAutoscaler, err error)
	Apply(ctx context.Context, nATGatewayAutoscaler *corev1alpha1.NATGatewayAutoscalerApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.NATGatewayAutoscaler, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, nATGatewayAutoscaler *corev1alpha1.NATGatewayAutoscalerApplyConfiguration, opts v1.ApplyOptions) (result *v1alpha1.NATGatewayAutoscaler, err error)
	NATGatewayAutoscalerExpansion
}

// nATGatewayAutoscalers implements NATGatewayAutoscalerInterface
type nATGatewayAutoscalers struct {
	*gentype.ClientWithListAndApply[*v1alpha1.NATGatewayAutoscaler, *v1alpha1.NATGatewayAutoscalerList, *corev1alpha1.NATGatewayAutoscalerApplyConfiguration]
}

// newNATGatewayAutoscalers returns a NATGatewayAutoscalers
func newNATGatewayAutoscalers(c *CoreV1alpha1Client, namespace string) *nATGatewayAutoscalers {
	return &nATGatewayAutoscalers{
		gentype.NewClientWithListAndApply[*v1alpha1.NATGatewayAutoscaler, *v1alpha1.NATGatewayAutoscalerList, *corev1alpha1.NATGatewayAutoscalerApplyConfiguration](
			"natgatewayautoscalers",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.NATGatewayAutoscaler { return &v1alpha1.NATGatewayAutoscaler{} },
			func() *v1alpha1.NATGatewayAutoscalerList { return &v1alpha1.NATGatewayAutoscalerList{} }),
	}
}
