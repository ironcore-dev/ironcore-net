/*
 * Copyright (c) 2022 by the OnMetal authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	types "k8s.io/apimachinery/pkg/types"
)

// IPAddressClaimRefApplyConfiguration represents an declarative configuration of the IPAddressClaimRef type for use
// with apply.
type IPAddressClaimRefApplyConfiguration struct {
	Group     *string    `json:"group,omitempty"`
	Resource  *string    `json:"resource,omitempty"`
	Namespace *string    `json:"namespace,omitempty"`
	Name      *string    `json:"name,omitempty"`
	UID       *types.UID `json:"uid,omitempty"`
}

// IPAddressClaimRefApplyConfiguration constructs an declarative configuration of the IPAddressClaimRef type for use with
// apply.
func IPAddressClaimRef() *IPAddressClaimRefApplyConfiguration {
	return &IPAddressClaimRefApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *IPAddressClaimRefApplyConfiguration) WithGroup(value string) *IPAddressClaimRefApplyConfiguration {
	b.Group = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *IPAddressClaimRefApplyConfiguration) WithResource(value string) *IPAddressClaimRefApplyConfiguration {
	b.Resource = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *IPAddressClaimRefApplyConfiguration) WithNamespace(value string) *IPAddressClaimRefApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *IPAddressClaimRefApplyConfiguration) WithName(value string) *IPAddressClaimRefApplyConfiguration {
	b.Name = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *IPAddressClaimRefApplyConfiguration) WithUID(value types.UID) *IPAddressClaimRefApplyConfiguration {
	b.UID = &value
	return b
}
