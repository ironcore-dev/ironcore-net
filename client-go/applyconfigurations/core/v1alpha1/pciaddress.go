// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PCIAddressApplyConfiguration represents a declarative configuration of the PCIAddress type for use
// with apply.
type PCIAddressApplyConfiguration struct {
	Domain   *string `json:"domain,omitempty"`
	Bus      *string `json:"bus,omitempty"`
	Slot     *string `json:"slot,omitempty"`
	Function *string `json:"function,omitempty"`
}

// PCIAddressApplyConfiguration constructs a declarative configuration of the PCIAddress type for use with
// apply.
func PCIAddress() *PCIAddressApplyConfiguration {
	return &PCIAddressApplyConfiguration{}
}

// WithDomain sets the Domain field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Domain field is set to the value of the last call.
func (b *PCIAddressApplyConfiguration) WithDomain(value string) *PCIAddressApplyConfiguration {
	b.Domain = &value
	return b
}

// WithBus sets the Bus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bus field is set to the value of the last call.
func (b *PCIAddressApplyConfiguration) WithBus(value string) *PCIAddressApplyConfiguration {
	b.Bus = &value
	return b
}

// WithSlot sets the Slot field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Slot field is set to the value of the last call.
func (b *PCIAddressApplyConfiguration) WithSlot(value string) *PCIAddressApplyConfiguration {
	b.Slot = &value
	return b
}

// WithFunction sets the Function field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Function field is set to the value of the last call.
func (b *PCIAddressApplyConfiguration) WithFunction(value string) *PCIAddressApplyConfiguration {
	b.Function = &value
	return b
}
