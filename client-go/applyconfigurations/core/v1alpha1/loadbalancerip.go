// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	net "github.com/ironcore-dev/ironcore-net/apimachinery/api/net"
	v1 "k8s.io/api/core/v1"
)

// LoadBalancerIPApplyConfiguration represents an declarative configuration of the LoadBalancerIP type for use
// with apply.
type LoadBalancerIPApplyConfiguration struct {
	Name     *string      `json:"name,omitempty"`
	IPFamily *v1.IPFamily `json:"ipFamily,omitempty"`
	IP       *net.IP      `json:"ip,omitempty"`
}

// LoadBalancerIPApplyConfiguration constructs an declarative configuration of the LoadBalancerIP type for use with
// apply.
func LoadBalancerIP() *LoadBalancerIPApplyConfiguration {
	return &LoadBalancerIPApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *LoadBalancerIPApplyConfiguration) WithName(value string) *LoadBalancerIPApplyConfiguration {
	b.Name = &value
	return b
}

// WithIPFamily sets the IPFamily field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPFamily field is set to the value of the last call.
func (b *LoadBalancerIPApplyConfiguration) WithIPFamily(value v1.IPFamily) *LoadBalancerIPApplyConfiguration {
	b.IPFamily = &value
	return b
}

// WithIP sets the IP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IP field is set to the value of the last call.
func (b *LoadBalancerIPApplyConfiguration) WithIP(value net.IP) *LoadBalancerIPApplyConfiguration {
	b.IP = &value
	return b
}
