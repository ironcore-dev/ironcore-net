// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// NetworkInterfaceNATApplyConfiguration represents a declarative configuration of the NetworkInterfaceNAT type for use
// with apply.
type NetworkInterfaceNATApplyConfiguration struct {
	IPFamily *v1.IPFamily                                   `json:"ipFamily,omitempty"`
	ClaimRef *NetworkInterfaceNATClaimRefApplyConfiguration `json:"claimRef,omitempty"`
}

// NetworkInterfaceNATApplyConfiguration constructs a declarative configuration of the NetworkInterfaceNAT type for use with
// apply.
func NetworkInterfaceNAT() *NetworkInterfaceNATApplyConfiguration {
	return &NetworkInterfaceNATApplyConfiguration{}
}

// WithIPFamily sets the IPFamily field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPFamily field is set to the value of the last call.
func (b *NetworkInterfaceNATApplyConfiguration) WithIPFamily(value v1.IPFamily) *NetworkInterfaceNATApplyConfiguration {
	b.IPFamily = &value
	return b
}

// WithClaimRef sets the ClaimRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClaimRef field is set to the value of the last call.
func (b *NetworkInterfaceNATApplyConfiguration) WithClaimRef(value *NetworkInterfaceNATClaimRefApplyConfiguration) *NetworkInterfaceNATApplyConfiguration {
	b.ClaimRef = value
	return b
}
