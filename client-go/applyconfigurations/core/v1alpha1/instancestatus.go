// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	net "github.com/ironcore-dev/ironcore-net/apimachinery/api/net"
)

// InstanceStatusApplyConfiguration represents an declarative configuration of the InstanceStatus type for use
// with apply.
type InstanceStatusApplyConfiguration struct {
	IPs            []net.IP `json:"ips,omitempty"`
	CollisionCount *int32   `json:"collisionCount,omitempty"`
}

// InstanceStatusApplyConfiguration constructs an declarative configuration of the InstanceStatus type for use with
// apply.
func InstanceStatus() *InstanceStatusApplyConfiguration {
	return &InstanceStatusApplyConfiguration{}
}

// WithIPs adds the given value to the IPs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the IPs field.
func (b *InstanceStatusApplyConfiguration) WithIPs(values ...net.IP) *InstanceStatusApplyConfiguration {
	for i := range values {
		b.IPs = append(b.IPs, values[i])
	}
	return b
}

// WithCollisionCount sets the CollisionCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CollisionCount field is set to the value of the last call.
func (b *InstanceStatusApplyConfiguration) WithCollisionCount(value int32) *InstanceStatusApplyConfiguration {
	b.CollisionCount = &value
	return b
}
