// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// InstanceAffinityTermApplyConfiguration represents a declarative configuration of the InstanceAffinityTerm type for use
// with apply.
type InstanceAffinityTermApplyConfiguration struct {
	LabelSelector *v1.LabelSelectorApplyConfiguration `json:"labelSelector,omitempty"`
	TopologyKey   *string                             `json:"topologyKey,omitempty"`
}

// InstanceAffinityTermApplyConfiguration constructs a declarative configuration of the InstanceAffinityTerm type for use with
// apply.
func InstanceAffinityTerm() *InstanceAffinityTermApplyConfiguration {
	return &InstanceAffinityTermApplyConfiguration{}
}

// WithLabelSelector sets the LabelSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelSelector field is set to the value of the last call.
func (b *InstanceAffinityTermApplyConfiguration) WithLabelSelector(value *v1.LabelSelectorApplyConfiguration) *InstanceAffinityTermApplyConfiguration {
	b.LabelSelector = value
	return b
}

// WithTopologyKey sets the TopologyKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TopologyKey field is set to the value of the last call.
func (b *InstanceAffinityTermApplyConfiguration) WithTopologyKey(value string) *InstanceAffinityTermApplyConfiguration {
	b.TopologyKey = &value
	return b
}
